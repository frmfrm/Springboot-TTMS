package com.my.ttms.bean;

import java.util.ArrayList;
import java.util.List;

public class PlaydetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public PlaydetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDirectorIsNull() {
            addCriterion("director is null");
            return (Criteria) this;
        }

        public Criteria andDirectorIsNotNull() {
            addCriterion("director is not null");
            return (Criteria) this;
        }

        public Criteria andDirectorEqualTo(String value) {
            addCriterion("director =", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotEqualTo(String value) {
            addCriterion("director <>", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorGreaterThan(String value) {
            addCriterion("director >", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorGreaterThanOrEqualTo(String value) {
            addCriterion("director >=", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorLessThan(String value) {
            addCriterion("director <", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorLessThanOrEqualTo(String value) {
            addCriterion("director <=", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorLike(String value) {
            addCriterion("director like", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotLike(String value) {
            addCriterion("director not like", value, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorIn(List<String> values) {
            addCriterion("director in", values, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotIn(List<String> values) {
            addCriterion("director not in", values, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorBetween(String value1, String value2) {
            addCriterion("director between", value1, value2, "director");
            return (Criteria) this;
        }

        public Criteria andDirectorNotBetween(String value1, String value2) {
            addCriterion("director not between", value1, value2, "director");
            return (Criteria) this;
        }

        public Criteria andMainactorIsNull() {
            addCriterion("mainactor is null");
            return (Criteria) this;
        }

        public Criteria andMainactorIsNotNull() {
            addCriterion("mainactor is not null");
            return (Criteria) this;
        }

        public Criteria andMainactorEqualTo(String value) {
            addCriterion("mainactor =", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorNotEqualTo(String value) {
            addCriterion("mainactor <>", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorGreaterThan(String value) {
            addCriterion("mainactor >", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorGreaterThanOrEqualTo(String value) {
            addCriterion("mainactor >=", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorLessThan(String value) {
            addCriterion("mainactor <", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorLessThanOrEqualTo(String value) {
            addCriterion("mainactor <=", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorLike(String value) {
            addCriterion("mainactor like", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorNotLike(String value) {
            addCriterion("mainactor not like", value, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorIn(List<String> values) {
            addCriterion("mainactor in", values, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorNotIn(List<String> values) {
            addCriterion("mainactor not in", values, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorBetween(String value1, String value2) {
            addCriterion("mainactor between", value1, value2, "mainactor");
            return (Criteria) this;
        }

        public Criteria andMainactorNotBetween(String value1, String value2) {
            addCriterion("mainactor not between", value1, value2, "mainactor");
            return (Criteria) this;
        }

        public Criteria andPlayintroIsNull() {
            addCriterion("playintro is null");
            return (Criteria) this;
        }

        public Criteria andPlayintroIsNotNull() {
            addCriterion("playintro is not null");
            return (Criteria) this;
        }

        public Criteria andPlayintroEqualTo(String value) {
            addCriterion("playintro =", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroNotEqualTo(String value) {
            addCriterion("playintro <>", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroGreaterThan(String value) {
            addCriterion("playintro >", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroGreaterThanOrEqualTo(String value) {
            addCriterion("playintro >=", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroLessThan(String value) {
            addCriterion("playintro <", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroLessThanOrEqualTo(String value) {
            addCriterion("playintro <=", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroLike(String value) {
            addCriterion("playintro like", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroNotLike(String value) {
            addCriterion("playintro not like", value, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroIn(List<String> values) {
            addCriterion("playintro in", values, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroNotIn(List<String> values) {
            addCriterion("playintro not in", values, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroBetween(String value1, String value2) {
            addCriterion("playintro between", value1, value2, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayintroNotBetween(String value1, String value2) {
            addCriterion("playintro not between", value1, value2, "playintro");
            return (Criteria) this;
        }

        public Criteria andPlayIdIsNull() {
            addCriterion("play_id is null");
            return (Criteria) this;
        }

        public Criteria andPlayIdIsNotNull() {
            addCriterion("play_id is not null");
            return (Criteria) this;
        }

        public Criteria andPlayIdEqualTo(Integer value) {
            addCriterion("play_id =", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdNotEqualTo(Integer value) {
            addCriterion("play_id <>", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdGreaterThan(Integer value) {
            addCriterion("play_id >", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("play_id >=", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdLessThan(Integer value) {
            addCriterion("play_id <", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdLessThanOrEqualTo(Integer value) {
            addCriterion("play_id <=", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdIn(List<Integer> values) {
            addCriterion("play_id in", values, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdNotIn(List<Integer> values) {
            addCriterion("play_id not in", values, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdBetween(Integer value1, Integer value2) {
            addCriterion("play_id between", value1, value2, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdNotBetween(Integer value1, Integer value2) {
            addCriterion("play_id not between", value1, value2, "playId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table playdetail
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table playdetail
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}